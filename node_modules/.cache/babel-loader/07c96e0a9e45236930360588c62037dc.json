{"ast":null,"code":"var _jsxFileName = \"/Users/chagelsorensen/Documents/react/chart-experiment/src/components/VizContainer.js\";\nimport React from \"react\";\nimport Barchart from \"./Barchart\";\nimport Scatterplot from \"./Scatterplot\";\nimport TableViz from \"./TableViz\";\n\nclass VizContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.decideViz = chartdata => {\n      const {\n        city,\n        name,\n        years,\n        rating\n      } = chartdata;\n\n      if (city || name) {\n        let fields = [];\n\n        if (city) {\n          fields.push(\"city\");\n        }\n\n        if (name) {\n          fields.push(\"name\");\n        }\n\n        if (years) {\n          fields.push(\"years\");\n        }\n\n        if (rating) {\n          fields.push(\"rating\");\n        }\n\n        return this.makeTable(fields);\n      }\n\n      if (years && rating) {\n        return this.makeScatterplot();\n      }\n\n      if (years || rating) {\n        if (years) {\n          return this.makeBar(\"years\");\n        } else {\n          return this.makeBar(\"rating\");\n        }\n      } else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"nothing\");\n      }\n    };\n\n    this.makeScatterplot = () => {\n      return React.createElement(Scatterplot, {\n        height: 400,\n        width: 800,\n        data: newdata,\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    };\n\n    this.makeTable = fields => {\n      return React.createElement(TableViz, {\n        fields: fields,\n        data: this.props.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    };\n\n    this.makeBar = field => {\n      const data = this.props.data;\n      let newdata = {};\n      let isYears = true;\n\n      if (field === \"rating\") {\n        isYears = false;\n      }\n\n      Object.keys(data).map(key => {\n        if (isYears) {\n          newdata[key] = {\n            value: data[key].years\n          };\n        } else {\n          newdata[key] = {\n            value: data[key].rating\n          };\n        }\n      });\n      return React.createElement(Barchart, {\n        height: 400,\n        width: 800,\n        data: newdata,\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    const chartdata = this.props.chartdata;\n    console.log(chartdata);\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"decider\"), this.decideViz(chartdata));\n  }\n\n}\n\nexport default VizContainer;","map":{"version":3,"sources":["/Users/chagelsorensen/Documents/react/chart-experiment/src/components/VizContainer.js"],"names":["React","Barchart","Scatterplot","TableViz","VizContainer","Component","decideViz","chartdata","city","name","years","rating","fields","push","makeTable","makeScatterplot","makeBar","newdata","props","theme","data","field","isYears","Object","keys","map","key","value","render","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Barchart from \"./Barchart\";\nimport Scatterplot from \"./Scatterplot\";\nimport TableViz from \"./TableViz\";\n\nclass VizContainer extends React.Component {\n  decideViz = chartdata => {\n    const { city, name, years, rating } = chartdata;\n\n    if (city || name) {\n      let fields = [];\n      if (city) {\n        fields.push(\"city\");\n      }\n      if (name) {\n        fields.push(\"name\");\n      }\n      if (years) {\n        fields.push(\"years\");\n      }\n      if (rating) {\n        fields.push(\"rating\");\n      }\n      return this.makeTable(fields);\n    }\n    if (years && rating) {\n      return this.makeScatterplot();\n    }\n    if (years || rating) {\n      if (years) {\n        return this.makeBar(\"years\");\n      } else {\n        return this.makeBar(\"rating\");\n      }\n    } else {\n      return <p>nothing</p>;\n    }\n  };\n\n  makeScatterplot = () => {\n    return (\n      <Scatterplot\n        height={400}\n        width={800}\n        data={newdata}\n        theme={this.props.theme}\n      />\n    );\n  };\n\n  makeTable = fields => {\n    return <TableViz fields={fields} data={this.props.data} />;\n  };\n\n  makeBar = field => {\n    const data = this.props.data;\n    let newdata = {};\n\n    let isYears = true;\n    if (field === \"rating\") {\n      isYears = false;\n    }\n\n    Object.keys(data).map(key => {\n      if (isYears) {\n        newdata[key] = { value: data[key].years };\n      } else {\n        newdata[key] = { value: data[key].rating };\n      }\n    });\n\n    return (\n      <Barchart\n        height={400}\n        width={800}\n        data={newdata}\n        theme={this.props.theme}\n      />\n    );\n  };\n\n  render() {\n    const chartdata = this.props.chartdata;\n    console.log(chartdata);\n\n    return (\n      <>\n        <h2>decider</h2>\n        {this.decideViz(chartdata)}\n      </>\n    );\n  }\n}\n\nexport default VizContainer;\n"]},"metadata":{},"sourceType":"module"}
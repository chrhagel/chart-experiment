{"ast":null,"code":"var _jsxFileName = \"/Users/christian/Documents/git/chart-experiment/src/components/Plotmark.js\";\nimport React from \"react\";\nimport { Circle } from \"react-konva\";\nimport Konva from \"konva\";\n\nclass Scatterplot extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      alert(this.props.value);\n    };\n  }\n\n  render() {\n    console.log(this.props.value + \" \" + this.props.yPos);\n    return React.createElement(React.Fragment, null, React.createElement(Circle, {\n      x: this.props.xPos,\n      y: this.props.yPos,\n      radius: this.props.radius,\n      fill: this.props.color,\n      value: this.props.value,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Scatterplot;","map":{"version":3,"sources":["/Users/christian/Documents/git/chart-experiment/src/components/Plotmark.js"],"names":["React","Circle","Konva","Scatterplot","Component","handleClick","alert","props","value","render","console","log","yPos","xPos","radius","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAExCC,WAFwC,GAE1B,MAAM;AAClBC,MAAAA,KAAK,CAAC,KAAKC,KAAL,CAAWC,KAAZ,CAAL;AACD,KAJuC;AAAA;;AAMxCC,EAAAA,MAAM,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,KAAX,GAAmB,GAAnB,GAAyB,KAAKD,KAAL,CAAWK,IAAhD;AACC,WACE,0CACE,oBAAC,MAAD;AACE,MAAA,CAAC,EAAE,KAAKL,KAAL,CAAWM,IADhB;AAEE,MAAA,CAAC,EAAE,KAAKN,KAAL,CAAWK,IAFhB;AAGE,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWO,MAHrB;AAIE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,KAJnB;AAKE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KALpB;AAME,MAAA,OAAO,EAAE,KAAKH,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AApBuC;;AAuB1C,eAAeF,WAAf","sourcesContent":["import React from \"react\";\nimport { Circle } from \"react-konva\";\nimport Konva from \"konva\";\n\nclass Scatterplot extends React.Component {\n\n  handleClick = () => {\n    alert(this.props.value);\n  };\n\n  render() {\n   console.log(this.props.value + \" \" + this.props.yPos ) \n    return (\n      <>\n        <Circle\n          x={this.props.xPos}\n          y={this.props.yPos}\n          radius={this.props.radius}\n          fill={this.props.color}\n          value={this.props.value}\n          onClick={this.handleClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default Scatterplot;\n"]},"metadata":{},"sourceType":"module"}